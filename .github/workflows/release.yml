name: Release Build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write

env:
  DOTNET_VERSION: '10.0.x'

jobs:
  build-tunnelclient:
    name: Build TunnelClient
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            runtime: linux-x64
            arch: amd64
          - os: windows-latest
            runtime: win-x64
            arch: amd64
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore src/TunnelClient/TunnelClient.csproj

      - name: Build TunnelClient
        run: dotnet publish src/TunnelClient/TunnelClient.csproj -c Release -r ${{ matrix.runtime }} --self-contained true -p:PublishAot=false -p:PublishSingleFile=true -o ./artifacts/tunnelclient-${{ matrix.runtime }}

      - name: Upload TunnelClient artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tunnelclient-${{ matrix.runtime }}
          path: ./artifacts/tunnelclient-${{ matrix.runtime }}/*
          retention-days: 1

  build-fastgateway:
    name: Build FastGateway
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            runtime: linux-x64
            arch: amd64
          - os: windows-latest
            runtime: win-x64
            arch: amd64
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore src/FastGateway/FastGateway.csproj

      - name: Build FastGateway
        run: dotnet publish src/FastGateway/FastGateway.csproj -c Release -r ${{ matrix.runtime }} --self-contained true -p:PublishSingleFile=true -o ./artifacts/fastgateway-${{ matrix.runtime }}

      - name: Upload FastGateway artifacts
        uses: actions/upload-artifact@v4
        with:
          name: fastgateway-${{ matrix.runtime }}
          path: ./artifacts/fastgateway-${{ matrix.runtime }}/*
          retention-days: 1

  create-release:
    name: Create Release
    needs: [build-tunnelclient, build-fastgateway]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Prepare release assets
        run: |
          mkdir -p release-assets
          
          # Create archives for each platform
          cd artifacts
          
          # TunnelClient archives
          for dir in tunnelclient-*; do
            if [[ -d "$dir" ]]; then
              runtime=$(echo $dir | sed 's/tunnelclient-//')
              if [[ "$runtime" == win-* ]]; then
                (cd "$dir" && zip -r "../../release-assets/tunnelclient-${runtime}.zip" .)
              else
                tar -czf "../release-assets/tunnelclient-${runtime}.tar.gz" -C "$dir" .
              fi
            fi
          done
          
          # FastGateway archives
          for dir in fastgateway-*; do
            if [[ -d "$dir" ]]; then
              runtime=$(echo $dir | sed 's/fastgateway-//')
              if [[ "$runtime" == win-* ]]; then
                (cd "$dir" && zip -r "../../release-assets/fastgateway-${runtime}.zip" .)
              else
                tar -czf "../release-assets/fastgateway-${runtime}.tar.gz" -C "$dir" .
              fi
            fi
          done

      - name: Generate release notes
        run: |
          cat > release-notes.md << 'EOF'
          ## Release ${{ github.ref_name || github.event.inputs.version }}
          
          ### Downloads
          
          #### TunnelClient
          - **Linux AMD64**: `tunnelclient-linux-x64.tar.gz`
          - **Windows AMD64**: `tunnelclient-win-x64.zip`
          
          #### FastGateway
          - **Linux AMD64**: `fastgateway-linux-x64.tar.gz`
          - **Windows AMD64**: `fastgateway-win-x64.zip`
          
          ### Features
          - Cross-platform support for Linux and Windows
          - AMD64 architecture support
          - TunnelClient: Single-file executable for optimal portability
          - FastGateway: Single-file executable with all dependencies included
          
          ### Usage
          
          #### TunnelClient
          ```bash
          # Linux/macOS
          ./tunnelclient
          
          # Windows
          tunnelclient.exe
          ```
          
          #### FastGateway
          ```bash
          # Linux/macOS
          ./fastgateway
          
          # Windows
          fastgateway.exe
          ```
          EOF

      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
        with:
          name: Release ${{ github.ref_name || github.event.inputs.version }}
          body_path: release-notes.md
          files: release-assets/*
          tag_name: ${{ github.ref_name || github.event.inputs.version }}
          target_commitish: ${{ github.sha }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}